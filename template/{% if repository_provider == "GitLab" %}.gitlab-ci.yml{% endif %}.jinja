stages:
  - prepare
  - test
  - build
  - publish

default:
  cache:
    - &npm-cache
      key:
        prefix: "npm"
        files:
          - package-lock.json
          - .gitlab-ci.yml
      paths:
        - .npm
      policy: pull

.npm-install: &npm-install
  - npm ci --cache .npm --prefer-offline

npm_cache:
  stage: prepare
  image: $IMAGE_NODE
  only:
    changes:
      - .gitlab-ci.yml
      - .eslintrc.cjs
      - "**/*.vue"
      - "**/*.ts"
      - "**/*.js"
  tags:
    - $RUNNER_TEST
  cache:
    - <<: *npm-cache
      policy: pull-push
  script:
    - *npm-install

eslint:
  stage: test
  image: $IMAGE_NODE
  only:
    changes:
      - .gitlab-ci.yml
      - .eslintrc.cjs
      - "**/*.vue"
      - "**/*.ts"
      - "**/*.js"
  cache: [*npm-cache]
  tags:
    - $RUNNER_TEST
  script:
    - *npm-install
    - npm run lint

variables:
  IMAGE_NODE: node:20-alpine
  RUNNER_TEST: docker
  RUNNER_BUILD: docker
  {% if use_docker -%}
  DOCKER_REGISTRY_LOGIN: docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY
  DOCKER_REGISTRY_LOGOUT: docker logout $DOCKER_REGISTRY
  DOCKER_IMAGE_NAME: $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$CI_PROJECT_NAME

.docker-build: &docker-build
  - $DOCKER_REGISTRY_LOGIN
  - docker build --pull --tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA .
  - docker push $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
  - $DOCKER_REGISTRY_LOGOUT

.docker-publish: &docker-publish
  - $DOCKER_REGISTRY_LOGIN
  - docker pull $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
  - docker tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA $DOCKER_IMAGE_NAME:$DOCKER_TAG
  - docker push $DOCKER_IMAGE_NAME:$DOCKER_TAG
  - $DOCKER_REGISTRY_LOGOUT

build-docker:
  stage: build
  image: docker:dind
  cache: []
  tags:
    - $RUNNER_BUILD
  script:
    - *docker-build
  except:
    - tags

publish-docker-edge:
  stage: publish
  image: docker:dind
  variables:
    GIT_STRATEGY: none
    DOCKER_TAG: edge
  cache: []
  tags:
    - $RUNNER_BUILD
  script:
    - *docker-publish
  only:
    - main

publish-docker-release:
  stage: publish
  image: docker:dind
  variables:
    GIT_STRATEGY: none
    DOCKER_TAG: $CI_COMMIT_TAG
  cache: []
  tags:
    - $RUNNER_BUILD
  script:
    - *docker-publish
  only:
    - tags

publish-docker-latest:
  stage: publish
  image: docker:dind
  variables:
    GIT_STRATEGY: none
    DOCKER_TAG: latest
  cache: []
  tags:
    - $RUNNER_BUILD
  script:
    - *docker-publish
  only:
    - tags
{% endif -%}
